{"version":3,"sources":["components/Table/Body/TableBody.jsx","components/Table/Head/TableHead.jsx","components/Table/Table.jsx","components/Filters/Filters.jsx","api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["TableBody","sortedProducts","map","product","className","id","name","category","icon","title","user","sex","TableHead","href","Table","length","Filters","searchQuery","resetFilters","selectedUserId","usersFromServer","setQueryForSeach","setSelectedUserId","categoriesFromServer","cn","onClick","userFromServer","type","placeholder","value","onChange","event","target","catogoryFromServer","ownerId","products","categoryId","find","categoryFromServer","App","useState","setSearchQuery","productsReceived","filter","preparedProductId","preparedSearchQuery","toLowerCase","preparedName","includes","getSortedProducts","query","ReactDOM","render","document","getElementById"],"mappings":"8OAAO,MAAMA,EAAY,QAAC,eAAEC,GAAH,SACvB,gCACGA,EAAeC,KAAIC,GAClB,qBAAI,UAAQ,UAAZ,UACE,oBAAIC,UAAU,uBAAuB,UAAQ,YAA7C,SACGD,EAAQE,KAGX,oBAAI,UAAQ,cAAZ,SAA2BF,EAAQG,OACnC,oBAAI,UAAQ,kBAAZ,mBAAkCH,EAAQI,SAASC,KAAnD,cAA6DL,EAAQI,SAASE,SAE9E,oBACE,UAAQ,cACRL,UACuB,MAArBD,EAAQO,KAAKC,IACT,gBACA,kBALR,SAQGR,EAAQO,KAAKJ,SAhBSH,EAAQE,OAHhB,ECAZO,EAAY,IACvB,gCACE,+BACE,6BACE,uBAAMR,UAAU,8BAAhB,eAGE,mBAAGS,KAAK,KAAR,SACE,sBAAMT,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,yBAMxC,6BACE,uBAAMA,UAAU,8BAAhB,oBAGE,mBAAGS,KAAK,KAAR,SACE,sBAAMT,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,8BAMxC,6BACE,uBAAMA,UAAU,8BAAhB,qBAGE,mBAAGS,KAAK,KAAR,SACE,sBAAMT,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,4BAMxC,6BACE,uBAAMA,UAAU,8BAAhB,iBAGE,mBAAGS,KAAK,KAAR,SACE,sBAAMT,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,8BC1CjCU,EAAQ,QAAC,eAAEb,GAAH,SACnB,qBAAKG,UAAU,sBAAf,SAGIH,EAAec,OAAS,EAEpB,wBACE,UAAQ,eACRX,UAAU,0CAFZ,UAIE,cAACQ,EAAD,IAEA,cAACZ,EAAD,CAAWC,eAAgBA,OAI7B,mBAAG,UAAQ,oBAAX,qDAhBW,E,oBCDd,MAAMe,EAAU,QAAC,YACtBC,EADsB,aAEtBC,EAFsB,eAGtBC,EAHsB,gBAItBC,EAJsB,iBAKtBC,EALsB,kBAMtBC,EANsB,qBAOtBC,GAPqB,SASrB,qBAAKnB,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,kCAAb,UACE,mBACE,UAAQ,iBACRS,KAAK,KACLT,UAAWoB,IAAG,CAAE,YAAgC,KAAnBL,IAC7BM,QAAS,IAAMH,EAAkB,IAJnC,iBASCF,EAAgBlB,KAAIwB,GACnB,mBACE,UAAQ,aACRb,KAAK,KAELT,UAAWoB,IACT,CAAE,YAAaE,EAAerB,KAAOc,IAEvCM,QAAS,IAAMH,EAAkBI,EAAerB,IAPlD,SASGqB,EAAepB,MANXoB,EAAerB,SAW1B,qBAAKD,UAAU,cAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACE,UAAQ,cACRuB,KAAK,OACLvB,UAAU,QACVwB,YAAY,SACZC,MAAOZ,EACPa,SAAUC,GAASV,EAAiBU,EAAMC,OAAOH,SAGnD,sBAAMzB,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,WAG1Ca,GACC,sBAAMb,UAAU,gBAAhB,SAEE,wBACE,UAAQ,cACRuB,KAAK,SACLvB,UAAU,SACVqB,QAAS,IAAMJ,EAAiB,aAO1C,sBAAKjB,UAAU,gCAAf,UACE,mBACE,UAAQ,WACRA,UAAU,yBACVS,KAAK,KAHP,iBAQCU,EAAqBrB,KAAI+B,GACxB,mBACE,UAAQ,WACR7B,UAAU,mBACVS,KAAK,KAHP,SAMGoB,EAAmBxB,OAFfwB,EAAmB5B,SAO9B,qBAAKD,UAAU,cAAf,SACE,mBACE,UAAQ,iBACRS,KAAK,KACLT,UAAU,0CACVqB,QAAS,IAAMP,IAJjB,qCAzFe,ECFR,OACb,CAAEb,GAAI,EAAGC,KAAM,OAAQK,IAAK,KAC5B,CAAEN,GAAI,EAAGC,KAAM,OAAQK,IAAK,KAC5B,CAAEN,GAAI,EAAGC,KAAM,MAAOK,IAAK,KAC3B,CAAEN,GAAI,EAAGC,KAAM,OAAQK,IAAK,MCJf,GACb,CACEN,GAAI,EACJI,MAAO,UACPD,KAAM,eACN0B,QAAS,GAEX,CACE7B,GAAI,EACJI,MAAO,SACPD,KAAM,eACN0B,QAAS,GAEX,CACE7B,GAAI,EACJI,MAAO,SACPD,KAAM,eACN0B,QAAS,GAEX,CACE7B,GAAI,EACJI,MAAO,cACPD,KAAM,eACN0B,QAAS,GAEX,CACE7B,GAAI,EACJI,MAAO,UACPD,KAAM,eACN0B,QAAS,ICnBb,MAAMC,ECVS,CACb,CACE9B,GAAI,EACJC,KAAM,OACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,QACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,OACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,SACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,QACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,SACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,OACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,QACN8B,WAAY,GAEd,CACE/B,GAAI,EACJC,KAAM,SACN8B,WAAY,IDlCoBlC,KAAKC,IACvC,MAAMI,EAAWgB,EAAqBc,MAAKC,GACzCA,EAAmBjC,KAAOF,EAAQiC,aAE9B1B,EAAOU,EAAgBiB,MAAKX,GAChCA,EAAerB,KAAOE,EAAS2B,UAGjC,MAAO,CAAE3B,WAAUG,UAASP,EAA5B,IAyBK,MAAMoC,EAAM,KACjB,MAAOpB,EAAgBG,GAAqBkB,mBAAS,KAC9CvB,EAAawB,GAAkBD,mBAAS,IAEzCvC,EA1BR,SAA2ByC,EAAkBvB,EAAgBF,GAC3D,OAAKE,GAAmBF,EAIjByB,EAAiBC,QAAQxC,IAC9B,MAAMyC,EAAoBzC,EAAQO,KAAKL,GACjCwC,EAAsB5B,EAAY6B,cAClCC,EAAe5C,EAAQG,KAAKwC,cAUlC,QAR2BD,GACvBE,EAAaC,SAASH,OAGE1B,GACxByB,IAAsBzB,EAG1B,IAhBOuB,CAkBV,CAMwBO,CACrBd,EACAhB,EACAF,GAQF,OACE,qBAAKb,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAEA,cAACY,EAAD,CACEE,aAXM,KACZuB,EAAe,IACfnB,EAAkB,GAAlB,EAUML,YAAaA,EACbE,eAAgBA,EAChBC,gBAAiBA,EACjBG,qBAAsBA,EACtBF,iBAAkB6B,GAAST,EAAeS,GAC1C5B,kBAAmBO,GAASP,EAAkBO,KAGhD,cAACf,EAAD,CAAOb,eAAgBA,QAf7B,EElDFkD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.deb37313.chunk.js","sourcesContent":["export const TableBody = ({ sortedProducts }) => (\n  <tbody>\n    {sortedProducts.map(product => (\n      <tr data-cy=\"Product\" key={product.id}>\n        <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n          {product.id}\n        </td>\n\n        <td data-cy=\"ProductName\">{product.name}</td>\n        <td data-cy=\"ProductCategory\">{`${product.category.icon} - ${product.category.title}`}</td>\n\n        <td\n          data-cy=\"ProductUser\"\n          className={\n            product.user.sex === 'm'\n              ? 'has-text-link'\n              : 'has-text-danger'\n          }\n        >\n          {product.user.name}\n        </td>\n      </tr>\n    ))}\n  </tbody>\n);\n","export const TableHead = () => (\n  <thead>\n    <tr>\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          ID\n\n          <a href=\"#/\">\n            <span className=\"icon\">\n              <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n            </span>\n          </a>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Product\n\n          <a href=\"#/\">\n            <span className=\"icon\">\n              <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n            </span>\n          </a>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          Category\n\n          <a href=\"#/\">\n            <span className=\"icon\">\n              <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n            </span>\n          </a>\n        </span>\n      </th>\n\n      <th>\n        <span className=\"is-flex is-flex-wrap-nowrap\">\n          User\n\n          <a href=\"#/\">\n            <span className=\"icon\">\n              <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n            </span>\n          </a>\n        </span>\n      </th>\n    </tr>\n  </thead>\n);\n","import { TableBody } from './Body/TableBody';\nimport { TableHead } from './Head/TableHead';\n\nexport const Table = ({ sortedProducts }) => (\n  <div className=\"box table-container\">\n\n    {\n      sortedProducts.length > 0\n        ? (\n          <table\n            data-cy=\"ProductTable\"\n            className=\"table is-striped is-narrow is-fullwidth\"\n          >\n            <TableHead />\n\n            <TableBody sortedProducts={sortedProducts} />\n          </table>\n        )\n        : (\n          <p data-cy=\"NoMatchingMessage\">\n            No products matching selected criteria\n          </p>\n        )\n    }\n\n  </div>\n);\n","import cn from 'classnames';\n\nexport const Filters = ({\n  searchQuery,\n  resetFilters,\n  selectedUserId,\n  usersFromServer,\n  setQueryForSeach,\n  setSelectedUserId,\n  categoriesFromServer,\n}) => (\n  <div className=\"block\">\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs has-text-weight-bold\">\n        <a\n          data-cy=\"FilterAllUsers\"\n          href=\"#/\"\n          className={cn({ 'is-active': selectedUserId === '' })}\n          onClick={() => setSelectedUserId('')}\n        >\n          All\n        </a>\n\n        {usersFromServer.map(userFromServer => (\n          <a\n            data-cy=\"FilterUser\"\n            href=\"#/\"\n            key={userFromServer.id}\n            className={cn(\n              { 'is-active': userFromServer.id === selectedUserId },\n            )}\n            onClick={() => setSelectedUserId(userFromServer.id)}\n          >\n            {userFromServer.name}\n          </a>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left has-icons-right\">\n          <input\n            data-cy=\"SearchField\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={searchQuery}\n            onChange={event => setQueryForSeach(event.target.value)}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n\n          {searchQuery && (\n            <span className=\"icon is-right\">\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQueryForSeach('')}\n              />\n            </span>\n          )}\n        </p>\n      </div>\n\n      <div className=\"panel-block is-flex-wrap-wrap\">\n        <a\n          data-cy=\"Category\"\n          className=\"button mr-6 is-success\"\n          href=\"#/\"\n        >\n          All\n        </a>\n\n        {categoriesFromServer.map(catogoryFromServer => (\n          <a\n            data-cy=\"Category\"\n            className=\"button mr-2 my-1\"\n            href=\"#/\"\n            key={catogoryFromServer.id}\n          >\n            {catogoryFromServer.title}\n          </a>\n        ))}\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          data-cy=\"ResetAllButton\"\n          href=\"#/\"\n          className=\"button is-link is-outlined is-fullwidth\"\n          onClick={() => resetFilters()}\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  </div>\n);\n","export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Table } from './components/Table';\nimport { Filters } from './components/Filters';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(categoryFromServer => (\n    categoryFromServer.id === product.categoryId\n  ));\n  const user = usersFromServer.find(userFromServer => (\n    userFromServer.id === category.ownerId\n  ));\n\n  return { category, user, ...product };\n});\n\nfunction getSortedProducts(productsReceived, selectedUserId, searchQuery) {\n  if (!selectedUserId && !searchQuery) {\n    return productsReceived;\n  }\n\n  return productsReceived.filter((product) => {\n    const preparedProductId = product.user.id;\n    const preparedSearchQuery = searchQuery.toLowerCase();\n    const preparedName = product.name.toLowerCase();\n\n    const isMatchSearchQuery = preparedSearchQuery\n      ? preparedName.includes(preparedSearchQuery)\n      : true;\n\n    const isMatchSelectedUser = selectedUserId\n      ? preparedProductId === selectedUserId\n      : true;\n\n    return isMatchSearchQuery && isMatchSelectedUser;\n  });\n}\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const sortedProducts = getSortedProducts(\n    products,\n    selectedUserId,\n    searchQuery,\n  );\n\n  const reset = () => {\n    setSearchQuery('');\n    setSelectedUserId('');\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <Filters\n          resetFilters={reset}\n          searchQuery={searchQuery}\n          selectedUserId={selectedUserId}\n          usersFromServer={usersFromServer}\n          categoriesFromServer={categoriesFromServer}\n          setQueryForSeach={query => setSearchQuery(query)}\n          setSelectedUserId={value => setSelectedUserId(value)}\n        />\n\n        <Table sortedProducts={sortedProducts} />\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}